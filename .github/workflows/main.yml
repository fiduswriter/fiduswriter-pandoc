name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: {}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          pip install pip --upgrade
          if grep version ../pyproject.toml | grep -q "dev";
            then pip install https://github.com/fiduswriter/fiduswriter/archive/develop.zip;
            else pip install https://github.com/fiduswriter/fiduswriter/archive/main.zip;
          fi
      - uses: pre-commit/action@v3.0.1
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - uses: actions/checkout@v4
      - uses: nanasess/setup-chromedriver@master
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install libjpeg-dev python3-dev python3-pip gettext zlib1g-dev git nodejs build-essential
          wget https://github.com/jgm/pandoc/releases/download/3.2.1/pandoc-3.2.1-1-amd64.deb -O pandoc.deb
          sudo dpkg -i pandoc.deb
          cd fiduswriter
          mv ../ci/configuration.py ./
          pip install requests[security]
          pip install coverage
          pip install coveralls
          pip install packaging
          pip install webdriver-manager
          pip install selenium
          pip install wheel
          pip install pip --upgrade
          if grep version ../pyproject.toml | grep -q "dev";
            then pip install https://github.com/fiduswriter/fiduswriter/archive/develop.zip;
            else pip install https://github.com/fiduswriter/fiduswriter/archive/main.zip;
          fi
          coverage run $(which fiduswriter) setup --no-static
      - name: Run pandoc server
        run: pandoc server &
      - name: Run test pandoc
        uses: nick-invision/retry@v3
        with:
          timeout_minutes: 8
          max_attempts: 3
          retry_on: error
          command: |
            cd fiduswriter
            coverage run $(which fiduswriter) test pandoc
      - name: Upload failed test screenshots
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4.3.4
        with:
          name: failure-artifacts
          path: ${{ github.workspace }}/fiduswriter/screenshots/
      - name: Coveralls
        run: |
          cd fiduswriter
          coveralls --service=github
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        run: curl "https://coveralls.io/webhook?repo_token=${{ secrets.GITHUB_TOKEN }}&repo_name=${{ github.repository }}" -d "payload[build_num]=${{ github.run_id }}&payload[status]=done"
